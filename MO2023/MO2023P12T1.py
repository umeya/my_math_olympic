# coding: utf-8

from itertools import combinations_with_replacement, combinations

def mo2023p11t1(n:int, m_min:int=2, A_max=0)->tuple:
	"""
	2023年度問12の残数調査でのテスト

	:param n:1からnまでの整数
	次のm_min とA_maxは探索に時間がかかるため調整のためのもの
	:param m_min: 調査対象の関数fは、f(g(x))=g(f(g(x)))を少なくともm_min個持つように足切りする
	:param A_max: 集合Aの要素数をA_maxから２までにする
	:return:
	"""
	list0 = list([0] + list(t) for t in
				 combinations_with_replacement((i for i in range(n, 0, -1)), n))
	list1 = []
	for g in list0:
		count = 0
		for f in list0:
			if condition2(n, f, g):
				count += 1
				if count >= m_min:
					list1.append(g)
					break
	print(f'調査対象の関数 f {n=}, {len(list1)} elemnts, {list1}')
	list1_idx = [i for i in range(len(list1))]
	list_f, list_f_each = [], []
	if A_max == 0:
		len_list1 = len(list1)
	else:
		len_list1 = A_max
	for cmb_n in range(len_list1, 1, -1):
		if len(list_f) > 0:
			break
		for cmb in combinations(list1_idx, cmb_n):
			if conition2all(n, list1, cmb):
				l1 = [list1[i] for i in cmb]
				list_f.append(l1)
				for l11 in l1:
					if l11 not in list_f_each:
						list_f_each.append(l11)
	if len(list_f) > 0:
		return (list_f, list_f_each)
	else:
		return (False, 'no solutiuon')


def condition1(n:int, f:list)->bool:
	for x in range(1, n):
		for y in range(x + 1, n + 1):
			if f[x] < f[y]:
				print(f'not {f}')
				return False
	else:
		return True

def condition2(n:int, f:list, g:list)->bool:
	for x in range(1, n+1):
		if f[g[x]] != g[f[g[x]]]  or  g[f[x]] != f[g[f[x]]]:
			return False
	return True

def conition2all(n:int, list11:list, cmb:tuple)->bool:
	for i in cmb:
		for j in cmb:
			if not condition2(n, list11[i], list11[j]):
				return False
	return True


def testn(n:int, m_min:int=2, A_max:int=0):
	list_f, list_f_each = mo2023p11t1(n, m_min, A_max)
	if not list_f:
		print(f'{n=} : no solution')
		return
	print(f'A sets')
	print(list_f)
	print(f'{n=} : {len(list_f)} sets------- {len(list_f[0])} elements')
	for f_set in list_f:
		for f in f_set:
			print(f'{f[1:]}')
		print('----------')

"""
n=5以上は時間がかかります。n=6の結果を下のコメントに載せてきます"""
testn(2)
testn(3)
# testn(4)
# testn(5,6, 7)
# testn(6, 10 , 14)

"""
調査対象の関数 f n=6, 40 elemnts, [[0, 6, 6, 6, 4, 4, 4], [0, 6, 6, 5, 4, 4, 4], [0, 6, 6, 4, 4, 4, 4], [0, 6, 6, 3, 3, 3, 3], [0, 6, 5, 5, 4, 4, 4], [0, 6, 5, 4, 4, 4, 4], [0, 6, 5, 3, 3, 3, 3], [0, 6, 4, 4, 4, 4, 4], [0, 6, 4, 3, 3, 3, 3], [0, 6, 3, 3, 3, 3, 3], [0, 5, 5, 5, 5, 5, 5], [0, 5, 5, 5, 4, 4, 4], [0, 5, 5, 4, 4, 4, 4], [0, 5, 5, 3, 3, 3, 3], [0, 5, 4, 4, 4, 4, 4], [0, 5, 4, 3, 3, 3, 3], [0, 5, 3, 3, 3, 3, 3], [0, 4, 4, 4, 4, 4, 4], [0, 4, 4, 4, 4, 4, 3], [0, 4, 4, 4, 4, 4, 2], [0, 4, 4, 4, 4, 4, 1], [0, 4, 4, 4, 4, 3, 3], [0, 4, 4, 4, 4, 3, 2], [0, 4, 4, 4, 4, 3, 1], [0, 4, 4, 4, 4, 2, 2], [0, 4, 4, 4, 4, 2, 1], [0, 4, 4, 4, 4, 1, 1], [0, 4, 4, 3, 3, 3, 3], [0, 4, 3, 3, 3, 3, 3], [0, 3, 3, 3, 3, 3, 3], [0, 3, 3, 3, 3, 3, 2], [0, 3, 3, 3, 3, 3, 1], [0, 3, 3, 3, 3, 2, 2], [0, 3, 3, 3, 3, 2, 1], [0, 3, 3, 3, 3, 1, 1], [0, 3, 3, 3, 2, 2, 2], [0, 3, 3, 3, 2, 2, 1], [0, 3, 3, 3, 2, 1, 1], [0, 3, 3, 3, 1, 1, 1], [0, 2, 2, 2, 2, 2, 2]]
[[[0, 6, 6, 6, 4, 4, 4], [0, 6, 6, 5, 4, 4, 4], [0, 6, 6, 4, 4, 4, 4], [0, 6, 5, 5, 4, 4, 4], [0, 6, 5, 4, 4, 4, 4], [0, 6, 4, 4, 4, 4, 4], [0, 5, 5, 5, 4, 4, 4], [0, 5, 5, 4, 4, 4, 4], [0, 5, 4, 4, 4, 4, 4], [0, 4, 4, 4, 4, 4, 4]], [[0, 6, 6, 3, 3, 3, 3], [0, 6, 5, 3, 3, 3, 3], [0, 6, 4, 3, 3, 3, 3], [0, 6, 3, 3, 3, 3, 3], [0, 5, 5, 3, 3, 3, 3], [0, 5, 4, 3, 3, 3, 3], [0, 5, 3, 3, 3, 3, 3], [0, 4, 4, 3, 3, 3, 3], [0, 4, 3, 3, 3, 3, 3], [0, 3, 3, 3, 3, 3, 3]], [[0, 4, 4, 4, 4, 4, 4], [0, 4, 4, 4, 4, 4, 3], [0, 4, 4, 4, 4, 4, 2], [0, 4, 4, 4, 4, 4, 1], [0, 4, 4, 4, 4, 3, 3], [0, 4, 4, 4, 4, 3, 2], [0, 4, 4, 4, 4, 3, 1], [0, 4, 4, 4, 4, 2, 2], [0, 4, 4, 4, 4, 2, 1], [0, 4, 4, 4, 4, 1, 1]], [[0, 3, 3, 3, 3, 3, 3], [0, 3, 3, 3, 3, 3, 2], [0, 3, 3, 3, 3, 3, 1], [0, 3, 3, 3, 3, 2, 2], [0, 3, 3, 3, 3, 2, 1], [0, 3, 3, 3, 3, 1, 1], [0, 3, 3, 3, 2, 2, 2], [0, 3, 3, 3, 2, 2, 1], [0, 3, 3, 3, 2, 1, 1], [0, 3, 3, 3, 1, 1, 1]]]
[[0, 6, 6, 6, 4, 4, 4], [0, 6, 6, 5, 4, 4, 4], [0, 6, 6, 4, 4, 4, 4], [0, 6, 5, 5, 4, 4, 4], [0, 6, 5, 4, 4, 4, 4], [0, 6, 4, 4, 4, 4, 4], [0, 5, 5, 5, 4, 4, 4], [0, 5, 5, 4, 4, 4, 4], [0, 5, 4, 4, 4, 4, 4], [0, 4, 4, 4, 4, 4, 4], [0, 6, 6, 3, 3, 3, 3], [0, 6, 5, 3, 3, 3, 3], [0, 6, 4, 3, 3, 3, 3], [0, 6, 3, 3, 3, 3, 3], [0, 5, 5, 3, 3, 3, 3], [0, 5, 4, 3, 3, 3, 3], [0, 5, 3, 3, 3, 3, 3], [0, 4, 4, 3, 3, 3, 3], [0, 4, 3, 3, 3, 3, 3], [0, 3, 3, 3, 3, 3, 3], [0, 4, 4, 4, 4, 4, 3], [0, 4, 4, 4, 4, 4, 2], [0, 4, 4, 4, 4, 4, 1], [0, 4, 4, 4, 4, 3, 3], [0, 4, 4, 4, 4, 3, 2], [0, 4, 4, 4, 4, 3, 1], [0, 4, 4, 4, 4, 2, 2], [0, 4, 4, 4, 4, 2, 1], [0, 4, 4, 4, 4, 1, 1], [0, 3, 3, 3, 3, 3, 2], [0, 3, 3, 3, 3, 3, 1], [0, 3, 3, 3, 3, 2, 2], [0, 3, 3, 3, 3, 2, 1], [0, 3, 3, 3, 3, 1, 1], [0, 3, 3, 3, 2, 2, 2], [0, 3, 3, 3, 2, 2, 1], [0, 3, 3, 3, 2, 1, 1], [0, 3, 3, 3, 1, 1, 1]]
n=6 : 4 sets------- 10 elements
[6, 6, 6, 4, 4, 4]
[6, 6, 5, 4, 4, 4]
[6, 6, 4, 4, 4, 4]
[6, 5, 5, 4, 4, 4]
[6, 5, 4, 4, 4, 4]
[6, 4, 4, 4, 4, 4]
[5, 5, 5, 4, 4, 4]
[5, 5, 4, 4, 4, 4]
[5, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4]
----------
[6, 6, 3, 3, 3, 3]
[6, 5, 3, 3, 3, 3]
[6, 4, 3, 3, 3, 3]
[6, 3, 3, 3, 3, 3]
[5, 5, 3, 3, 3, 3]
[5, 4, 3, 3, 3, 3]
[5, 3, 3, 3, 3, 3]
[4, 4, 3, 3, 3, 3]
[4, 3, 3, 3, 3, 3]
[3, 3, 3, 3, 3, 3]
----------
[4, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 3]
[4, 4, 4, 4, 4, 2]
[4, 4, 4, 4, 4, 1]
[4, 4, 4, 4, 3, 3]
[4, 4, 4, 4, 3, 2]
[4, 4, 4, 4, 3, 1]
[4, 4, 4, 4, 2, 2]
[4, 4, 4, 4, 2, 1]
[4, 4, 4, 4, 1, 1]
----------
[3, 3, 3, 3, 3, 3]
[3, 3, 3, 3, 3, 2]
[3, 3, 3, 3, 3, 1]
[3, 3, 3, 3, 2, 2]
[3, 3, 3, 3, 2, 1]
[3, 3, 3, 3, 1, 1]
[3, 3, 3, 2, 2, 2]
[3, 3, 3, 2, 2, 1]
[3, 3, 3, 2, 1, 1]
[3, 3, 3, 1, 1, 1]
----------
[6, 6, 6, 4, 4, 4]
[6, 6, 5, 4, 4, 4]
[6, 6, 4, 4, 4, 4]
[6, 5, 5, 4, 4, 4]
[6, 5, 4, 4, 4, 4]
[6, 4, 4, 4, 4, 4]
[5, 5, 5, 4, 4, 4]
[5, 5, 4, 4, 4, 4]
[5, 4, 4, 4, 4, 4]
[4, 4, 4, 4, 4, 4]
[6, 6, 3, 3, 3, 3]
[6, 5, 3, 3, 3, 3]
[6, 4, 3, 3, 3, 3]
[6, 3, 3, 3, 3, 3]
[5, 5, 3, 3, 3, 3]
[5, 4, 3, 3, 3, 3]
[5, 3, 3, 3, 3, 3]
[4, 4, 3, 3, 3, 3]
[4, 3, 3, 3, 3, 3]
[3, 3, 3, 3, 3, 3]
[4, 4, 4, 4, 4, 3]
[4, 4, 4, 4, 4, 2]
[4, 4, 4, 4, 4, 1]
[4, 4, 4, 4, 3, 3]
[4, 4, 4, 4, 3, 2]
[4, 4, 4, 4, 3, 1]
[4, 4, 4, 4, 2, 2]
[4, 4, 4, 4, 2, 1]
[4, 4, 4, 4, 1, 1]
[3, 3, 3, 3, 3, 2]
[3, 3, 3, 3, 3, 1]
[3, 3, 3, 3, 2, 2]
[3, 3, 3, 3, 2, 1]
[3, 3, 3, 3, 1, 1]
[3, 3, 3, 2, 2, 2]
[3, 3, 3, 2, 2, 1]
[3, 3, 3, 2, 1, 1]
[3, 3, 3, 1, 1, 1]
"""